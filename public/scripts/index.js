define(["exports","xhr","utils","jquery"],function(e,t,n,r){"use strict";function o(e){var t=void 0===arguments[1]?"":arguments[1],n=void 0===arguments[2]?new Map:arguments[2],r=void 0===arguments[3]?"":arguments[3];Polymer["import"](["components/"+e+"/"+e+".html"],function(){c("main").fadeOut(1e3,function(){for(var o="",a=n,s=Array.isArray(a),u=0,a=s?a:a[Symbol.iterator]();;){var l;if(s){if(u>=a.length)break;l=a[u++]}else{if(u=a.next(),u.done)break;l=u.value}var f=i(l,2),d=f[0],m=f[1];o+=" "+d+"='"+m+"'"}c("main").html("<"+e+o+">"+r+"</"+e+">"),c("#page-title, title").text(t),c("main").fadeIn(1e3)})})}var a=function(e){return e&&e.__esModule?e["default"]:e},i=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e)){for(var n,r=[],o=e[Symbol.iterator]();!(n=o.next()).done&&(r.push(n.value),!t||r.length!==t););return r}throw new TypeError("Invalid attempt to destructure non-iterable instance")},s=t.post,u=n.errorToJSON,c=a(r),l=io();window.loadTemplate=o,u(),window.onerror=function(e,t,n,r,o){var a=o||{message:e,url:t,line:n,col:r};return s("/test",a instanceof Error?a.toJSON():JSON.stringify(a))["catch"](function(e){return console.error(e)}),!0},o("choose-mode","Choose Mode"),l.on("connect",function(){setTimeout(function(){c("#status-indicator").removeClass("fa-chain-broken").addClass("fa-link"),c("#status-text").text(" Connection established").fadeIn(1e3),setTimeout(function(){c("#status-text").fadeOut(1e3,function(){return c("#status-indicator").addClass("no-text")})},2500)},2500)}),e.socket=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMvaW5kZXguanMiXSwibmFtZXMiOlsiZGVmaW5lIiwiZXhwb3J0cyIsIl94aHIiLCJfdXRpbHMiLCJfanF1ZXJ5IiwibG9hZFRlbXBsYXRlIiwibmFtZSIsInRpdGxlIiwidW5kZWZpbmVkIiwiYXJndW1lbnRzIiwiYXR0cnMiLCJNYXAiLCJjb250ZW50IiwiUG9seW1lciIsIiQiLCJmYWRlT3V0Iiwic3RyIiwiX2l0ZXJhdG9yIiwiX2lzQXJyYXkiLCJBcnJheSIsImlzQXJyYXkiLCJfaSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiX3JlZiIsImxlbmd0aCIsIm5leHQiLCJkb25lIiwidmFsdWUiLCJfcmVmMiIsIl9zbGljZWRUb0FycmF5IiwiX25hbWUiLCJodG1sIiwidGV4dCIsImZhZGVJbiIsIl9pbnRlcm9wUmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJhcnIiLCJpIiwiT2JqZWN0IiwiX3N0ZXAiLCJfYXJyIiwicHVzaCIsIlR5cGVFcnJvciIsInBvc3QiLCJlcnJvclRvSlNPTiIsInNvY2tldCIsImlvIiwid2luZG93Iiwib25lcnJvciIsIm1lc3NhZ2UiLCJ1cmwiLCJsaW5lIiwiY29sIiwiZXJyIiwicmVzdWx0IiwiRXJyb3IiLCJ0b0pTT04iLCJKU09OIiwic3RyaW5naWZ5IiwiY29uc29sZSIsImVycm9yIiwib24iLCJzZXRUaW1lb3V0IiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsImRlZmluZVByb3BlcnR5Il0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxVQUFXLE1BQU8sUUFBUyxVQUFXLFNBQVVDLEVBQVNDLEVBQU1DLEVBQVFDLEdBRS9FLFlBTUEsU0FBU0MsR0FBYUMsR0FLbEIsR0FMd0JDLEdBQUtDLFNBQUFDLFVBQUEsR0FBRyxHQUFFQSxVQUFBLEdBQUVDLEVBQUtGLFNBQUFDLFVBQUEsR0FBRyxHQUFJRSxLQUFLRixVQUFBLEdBQUVHLEVBQU9KLFNBQUFDLFVBQUEsR0FBRyxHQUFFQSxVQUFBLEVBQ3JFSSxTQUFPLFdBQVEsY0FBZVAsRUFBSSxJQUFJQSxFQUFJLFNBQVUsV0FDbERRLEVBQUUsUUFBUUMsUUFBUSxJQUFNLFdBRXRCLElBQUEsR0FESUMsR0FBTSxHQUNWQyxFQUEwQlAsRUFBS1EsRUFBQUMsTUFBQUMsUUFBQUgsR0FBQUksRUFBQSxFQUFBSixFQUFBQyxFQUFBRCxFQUFBQSxFQUFBSyxPQUFBQyxjQUFBLENBUTNCLEdBQUlDLEVBQ0osSUFBSU4sRUFBVSxDQUNaLEdBQUlHLEdBQU1KLEVBQVVRLE9BQVEsS0FDNUJELEdBQU9QLEVBQVVJLFNBQ1osQ0FFTCxHQURBQSxFQUFLSixFQUFVUyxPQUNYTCxFQUFHTSxLQUFNLEtBQ2JILEdBQU9ILEVBQUdPLE1BRVosR0FBSUMsR0FBUUMsRUFBZU4sRUFBTSxHQWpCM0JPLEVBQUlGLEVBQUEsR0FBRUQsRUFBS0MsRUFBQSxFQUNuQmIsSUFBRyxJQUFRZSxFQUFJLEtBQUtILEVBQUssSUFFM0JkLEVBQUUsUUFBUWtCLEtBQUksSUFBSzFCLEVBQU9VLEVBQUcsSUFBSUosRUFBTyxLQUFLTixFQUFJLEtBQ2pEUSxFQUFFLHNCQUFzQm1CLEtBQUsxQixHQUM3Qk8sRUFBRSxRQUFRb0IsT0FBTyxTQWZyQixHQUFJQyxHQUFrQixTQUFVQyxHQUFPLE1BQU9BLElBQU9BLEVBQUlDLFdBQWFELEVBQUksV0FBYUEsR0FFbkZOLEVBQWlCLFNBQVVRLEVBQUtDLEdBQUssR0FBSXBCLE1BQU1DLFFBQVFrQixHQUFRLE1BQU9BLEVBQVksSUFBSWhCLE9BQU9DLFdBQVlpQixRQUFPRixHQUFNLENBQWlCLElBQUssR0FBd0NHLEdBQXhEQyxLQUFvQnpCLEVBQVlxQixFQUFJaEIsT0FBT0MsY0FBc0JrQixFQUFReEIsRUFBVVMsUUFBUUMsT0FBU2UsRUFBS0MsS0FBS0YsRUFBTWIsUUFBWVcsR0FBS0csRUFBS2pCLFNBQVdjLEtBQVksTUFBT0csR0FBZSxLQUFNLElBQUlFLFdBQVUseURBRHJVQyxFQUFJM0MsRUFBSjJDLEtBQ0FDLEVBQVczQyxFQUFYMkMsWUFDRGhDLEVBQUNxQixFQUFBL0IsR0FDSjJDLEVBQVNDLElBZWJDLFFBQU81QyxhQUFlQSxFQUN0QnlDLElBQ0FHLE9BQU9DLFFBQVUsU0FBQ0MsRUFBU0MsRUFBS0MsRUFBTUMsRUFBS0MsR0FDekMsR0FBSUMsR0FBU0QsSUFDWEosUUFBQUEsRUFBU0MsSUFBQUEsRUFBS0MsS0FBQUEsRUFBTUMsSUFBQUEsRUFHdEIsT0FEQVQsR0FBSyxRQUFTVyxZQUFrQkMsT0FBUUQsRUFBT0UsU0FBV0MsS0FBS0MsVUFBVUosSUFBUSxTQUFPLFNBQUFELEdBcUJwRixNQXJCMkZNLFNBQVFDLE1BQU1QLE1BQ3RHLEdBRVRsRCxFQUFhLGNBQWUsZUFDNUIwQyxFQUFPZ0IsR0FBRyxVQUFXLFdBQ25CQyxXQUFXLFdBQ1RsRCxFQUFFLHFCQUFxQm1ELFlBQVksbUJBQW1CQyxTQUFTLFdBQy9EcEQsRUFBRSxnQkFBZ0JtQixLQUFLLDJCQUEyQkMsT0FBTyxLQUN6RDhCLFdBQVcsV0FDVGxELEVBQUUsZ0JBQWdCQyxRQUFRLElBQU0sV0F1QjVCLE1BdkJrQ0QsR0FBRSxxQkFBcUJvRCxTQUFTLGNBQ3JFLE9BQ0YsUUEwQkhqRSxFQXJCTThDLE9BQUFBLEVBc0JOUCxPQUFPMkIsZUFBZWxFLEVBQVMsY0FDN0IyQixPQUFPIiwiZmlsZSI6InNjcmlwdHMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBqc2hpbnQgZGV2ZWw6IHRydWUgKi9cbi8qIGdsb2JhbCBQb2x5bWVyLCBpbyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHtwb3N0fSBmcm9tICd4aHInO1xuaW1wb3J0IHtlcnJvclRvSlNPTn0gZnJvbSAndXRpbHMnO1xuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmxldCBzb2NrZXQgPSBpbygpO1xuXG5mdW5jdGlvbiBsb2FkVGVtcGxhdGUobmFtZSwgdGl0bGUgPSAnJywgYXR0cnMgPSBuZXcgTWFwKCksIGNvbnRlbnQgPSAnJykgeyAvL1RPRE86IFByb21pc2UgaW50ZXJmYWNlPyBvciBlZSBpbnRlcmZhY2VcbiAgUG9seW1lci5pbXBvcnQoW2Bjb21wb25lbnRzLyR7bmFtZX0vJHtuYW1lfS5odG1sYF0sICgpID0+IHtcbiAgICAkKCdtYWluJykuZmFkZU91dCgxMDAwLCAoKSA9PiB7XG4gICAgICBsZXQgc3RyID0gJyc7XG4gICAgICBmb3IgKGxldCBbbmFtZSwgdmFsdWVdIG9mIGF0dHJzKSB7XG4gICAgICAgIHN0ciArPSBgICR7bmFtZX09JyR7dmFsdWV9J2A7XG4gICAgICB9XG4gICAgICAkKCdtYWluJykuaHRtbChgPCR7bmFtZX0ke3N0cn0+JHtjb250ZW50fTwvJHtuYW1lfT5gKTtcbiAgICAgICQoJyNwYWdlLXRpdGxlLCB0aXRsZScpLnRleHQodGl0bGUpO1xuICAgICAgJCgnbWFpbicpLmZhZGVJbigxMDAwKTtcbiAgICB9KTtcbiAgfSk7XG59XG53aW5kb3cubG9hZFRlbXBsYXRlID0gbG9hZFRlbXBsYXRlO1xuZXJyb3JUb0pTT04oKTtcbndpbmRvdy5vbmVycm9yID0gKG1lc3NhZ2UsIHVybCwgbGluZSwgY29sLCBlcnIpID0+IHtcbiAgbGV0IHJlc3VsdCA9IGVyciB8fCB7XG4gICAgbWVzc2FnZSwgdXJsLCBsaW5lLCBjb2xcbiAgfTtcbiAgcG9zdCgnL3Rlc3QnLCByZXN1bHQgaW5zdGFuY2VvZiBFcnJvciA/IHJlc3VsdC50b0pTT04oKSA6IEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKGVycikpO1xuICByZXR1cm4gdHJ1ZTtcbn07XG5sb2FkVGVtcGxhdGUoJ2Nob29zZS1tb2RlJywgJ0Nob29zZSBNb2RlJyk7XG5zb2NrZXQub24oJ2Nvbm5lY3QnLCAoKSA9PiB7XG4gIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICQoJyNzdGF0dXMtaW5kaWNhdG9yJykucmVtb3ZlQ2xhc3MoJ2ZhLWNoYWluLWJyb2tlbicpLmFkZENsYXNzKCdmYS1saW5rJyk7XG4gICAgJCgnI3N0YXR1cy10ZXh0JykudGV4dCgnIENvbm5lY3Rpb24gZXN0YWJsaXNoZWQnKS5mYWRlSW4oMTAwMCk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAkKCcjc3RhdHVzLXRleHQnKS5mYWRlT3V0KDEwMDAsICgpID0+ICQoJyNzdGF0dXMtaW5kaWNhdG9yJykuYWRkQ2xhc3MoJ25vLXRleHQnKSk7XG4gICAgfSwgMjUwMCk7XG4gIH0sIDI1MDApO1xufSk7XG4vL2Vycm9yXG4vL2Rpc2Nvbm5lY3Rcbi8vcmVjb25uZWN0aW5nLCByZWNvbm5lY3RfYXR0ZW1wdCwgcmVjb25uZWN0X2Vycm9yLCByZWNvbm5lY3RfZmFpbGVkXG5leHBvcnQge3NvY2tldH07XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=